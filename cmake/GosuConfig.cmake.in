# Find Gosu includes and library
#
# This module defines
#  Gosu_INCLUDE_DIRS
#  Gosu_LIBRARIES, the libraries to link against to use Gosu.
#  Gosu_FOUND, If false, do not try to use Gosu
#
###############################################
#
#Copyright (c) 2005-2012 Matt Williams <matt@volumesoffun.com>
#Copyright (c) 2005-2012 David Williams <david@volumesoffun.com>
#Copyright (c) 2012 Oliver Schneider <mail@oli-obk.de>
#
#This software is provided 'as-is', without any express or implied
#warranty. In no event will the authors be held liable for any damages
#arising from the use of this software.
#
#Permission is granted to anyone to use this software for any purpose,
#including commercial applications, and to alter it and redistribute it
#freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
# claim that you wrote the original software. If you use this software
# in a product, an acknowledgment in the product documentation would be
# appreciated but is not required.
#
# 2. Altered source versions must be plainly marked as such, and must not be
# misrepresented as being the original software.
#
# 3. This notice may not be removed or altered from any source
# distribution.
#
###############################################

include(FindPackageMessage)

if(Gosu_FIND_REQUIRED)
    set(Gosu_FIND_TYPE REQUIRED)
elseif(Gosu_FIND_QUIETLY)
    set(Gosu_FIND_TYPE QUIETLY)
else()
    message("Compiling the Gosu library")
endif()

get_filename_component(THIS_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
if(WIN32)
    set(PREFIX ${THIS_DIR}/..)
else()
    set(PREFIX ${THIS_DIR}/../../..)
endif()

set(Gosu_INCLUDE_DIR "${PREFIX}/@Gosu_INCLUDE_INSTALL_DIRS@/..")
set(Gosu_INCLUDE_DIRS ${Gosu_INCLUDE_DIR})

find_package(OpenAL REQUIRED)
mark_as_advanced(SDLTTF_INCLUDE_DIR)
mark_as_advanced(SDLTTF_LIBRARY)
mark_as_advanced(SDL_INCLUDE_DIR)
mark_as_advanced(SDL_LIBRARY)

find_package(OpenGL REQUIRED)

find_package(PkgConfig REQUIRED)
pkg_check_modules(SDL2 REQUIRED sdl2)
pkg_check_modules(VORBIS REQUIRED vorbisfile)

if(NOT WIN32 AND NOT APPLE)
    find_package(Freetype REQUIRED)
    pkg_check_modules(SDL2_ttf REQUIRED)
    find_package(X11 REQUIRED)
    pkg_check_modules(PANGO REQUIRED pango)
    pkg_check_modules(PANGOFT REQUIRED pangoft2)
    pkg_check_modules(SNDFILE REQUIRED sndfile)
    # FreeImage has neither either a Find*.cmake file nor a .pc file - search manually
    # pkg_check_modules(FREEIMAGE REQUIRED freeimage)
    find_path(FREEIMAGE_INCLUDE_DIRS FreeImage.h)
    find_library(FREEIMAGE_LIBRARIES freeimage)
    if(NOT FREEIMAGE_INCLUDE_DIRS OR NOT FREEIMAGE_LIBRARIES)
        message(FATAL_ERROR "Freeimage could not be found")
    endif()
    mark_as_advanced(FREEIMAGE_INCLUDE_DIRS)
    mark_as_advanced(FREEIMAGE_LIBRARIES)
endif ()

# No include_directories here, let the FindGosu.cmake user handle that through return variables

set( LINK_LIBRARIES
    ${FREETYPE_LINK_LIBRARIES}
    ${OPENAL_LIBRARY}
    ${SDL2_TTF_LIBRARIES}
    ${SDL2_LIBRARY}
    ${OPENGL_LIBRARY}
    ${SNDFILE_LIBRARIES}
    ${PANGO_LIBRARIES}
    ${PANGOFT_LIBRARIES}
    ${FREEIMAGE_LIBRARIES}
    ${VORBIS_LIBRARIES}
)
foreach(it ${LINK_LIBRARIES})
    set(LINKER_FLAGS ${LINKER_FLAGS} " -l" ${it})
endforeach()

set(Gosu_LIBRARY ${PREFIX}/@Gosu_LIBRARY_INSTALL_DIRS@/libGosu.a)
set(Gosu_LIBRARIES ${Gosu_LIBRARY} ${LINK_LIBRARIES})
find_package_handle_standard_args(Gosu DEFAULT_MSG Gosu_LIBRARY Gosu_INCLUDE_DIR)
mark_as_advanced(Gosu_INCLUDE_DIR Gosu_LIBRARY)
